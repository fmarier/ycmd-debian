Description: This patch converts projets ycm_extra_conf.py to a generic
 configuration for semantic completion. This patch also sets global
 ycm_extra_conf in default_settings.json

--- a/cpp/ycm/.ycm_extra_conf.py
+++ b/cpp/ycm/.ycm_extra_conf.py
@@ -36,16 +36,12 @@
 # CHANGE THIS LIST OF FLAGS. YES, THIS IS THE DROID YOU HAVE BEEN LOOKING FOR.
 flags = [
 '-Wall',
-'-Wextra',
+#'-Wextra',
 '-Werror',
-'-Wc++98-compat',
+#'-Wc++98-compat',
 '-Wno-long-long',
 '-Wno-variadic-macros',
 '-fexceptions',
-'-DNDEBUG',
-# You 100% do NOT need -DUSE_CLANG_COMPLETER in your flags; only the YCM
-# source code needs it.
-'-DUSE_CLANG_COMPLETER',
 # THIS IS IMPORTANT! Without a "-std=<something>" flag, clang won't know which
 # language to use when compiling headers. So it will guess. Badly. So C++
 # headers will be compiled as C headers. You don't want that so ALWAYS specify
@@ -59,28 +55,14 @@
 # For a C project, you would set this to 'c' instead of 'c++'.
 '-x',
 'c++',
-'-isystem',
-'../BoostParts',
-'-isystem',
-# This path will only work on OS X, but extra paths that don't exist are not
-# harmful
-'/System/Library/Frameworks/Python.framework/Headers',
-'-isystem',
-'../llvm/include',
-'-isystem',
-'../llvm/tools/clang/include',
-'-I',
-'.',
-'-I',
-'./ClangCompleter',
-'-isystem',
-'./tests/gmock/gtest',
-'-isystem',
-'./tests/gmock/gtest/include',
-'-isystem',
-'./tests/gmock',
-'-isystem',
-'./tests/gmock/include',
+# You can add the specified directory to the search path for
+# system include files. 
+#'-isystem',
+#'/usr/include/c++/5',
+# You can add the specified directory to the search path for
+# include files. 
+#'-I',
+#'/usr/include/gmock',
 ]
 
 
--- a/ycmd/default_settings.json
+++ b/ycmd/default_settings.json
@@ -12,7 +12,7 @@
   "collect_identifiers_from_tags_files": 0,
   "max_num_identifier_candidates": 10,
   "extra_conf_globlist": [],
-  "global_ycm_extra_conf": "",
+  "global_ycm_extra_conf": "/usr/lib/ycmd/ycm_extra_conf.py",
   "confirm_extra_conf": 1,
   "complete_in_comments": 0,
   "complete_in_strings": 1,
